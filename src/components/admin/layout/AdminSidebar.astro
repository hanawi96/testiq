---
export interface Props {
  currentPath?: string;
}

const { currentPath = '' } = Astro.props;

// 🎯 SMART: Pre-compute server-side states để tránh client-side computation
const serverSideDropdownStates = new Map();

// Tính toán dropdown states dựa trên currentPath (server-side)
function computeServerSideDropdownState(currentPath: string, item: any): boolean {
  if (!item.hasDropdown || !item.subItems) return false;
  return item.subItems.some((subItem: any) => {
    if (subItem.href === '/admin') {
      return currentPath === '/admin' || currentPath === '/admin/';
    }
    if (subItem.href === '/admin/users') {
      return currentPath === '/admin/users' || currentPath === '/admin/users/';
    }
    if (subItem.href === '/admin/users/create') {
      return currentPath === '/admin/users/create' || currentPath === '/admin/users/create/';
    }
    return currentPath.startsWith(subItem.href);
  });
}

// Menu items với pre-computed states
const menuItems = [
  {
    id: 'dashboard',
    title: 'Dashboard',
    href: '/admin',
    icon: 'M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z M8 5a2 2 0 012-2h4a2 2 0 012 2v4H8V5z'
  },
  {
    id: 'articles',
    title: 'Bài viết',
    icon: 'M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z',
    hasDropdown: true,
    subItems: [
      {
        id: 'articles-create',
        title: 'Thêm bài viết',
        href: '/admin/articles/create',
        icon: 'M12 4v16m8-8H4'
      },
      {
        id: 'articles-manage',
        title: 'Quản lý bài viết',
        href: '/admin/articles',
        icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2'
      }
    ]
  },
  {
    id: 'categories',
    title: 'Danh mục',
    icon: 'M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10',
    hasDropdown: true,
    subItems: [
      {
        id: 'categories-create',
        title: 'Thêm danh mục',
        href: '/admin/categories/create',
        icon: 'M12 4v16m8-8H4'
      },
      {
        id: 'categories-manage',
        title: 'Quản lý danh mục',
        href: '/admin/categories',
        icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2'
      }
    ]
  },
  {
    id: 'tags',
    title: 'Tags',
    icon: 'M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z',
    hasDropdown: true,
    subItems: [
      {
        id: 'tags-create',
        title: 'Thêm tag',
        href: '/admin/tags/create',
        icon: 'M12 4v16m8-8H4'
      },
      {
        id: 'tags-manage',
        title: 'Quản lý tags',
        href: '/admin/tags',
        icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2'
      }
    ]
  },
  {
    id: 'comments',
    title: 'Bình luận',
    icon: 'M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z',
    hasDropdown: true,
    subItems: [
      {
        id: 'comments-manage',
        title: 'Quản lý bình luận',
        href: '/admin/comments',
        icon: 'M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z'
      },
      {
        id: 'comments-pending',
        title: 'Bình luận chờ duyệt',
        href: '/admin/comments/pending',
        icon: 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'
      }
    ]
  },
  {
    id: 'users',
    title: 'Người dùng',
    icon: 'M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z',
    hasDropdown: true,
    subItems: [
      {
        id: 'users-create',
        title: 'Thêm người dùng',
        href: '/admin/users/create',
        icon: 'M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
      },
      {
        id: 'users-manage',
        title: 'Quản lý người dùng',
        href: '/admin/users',
        icon: 'M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z'
      }
    ]
  },
  {
    id: 'results',
    title: 'Kết quả',
    href: '/admin/results',
    icon: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z'
  },
  {
    id: 'media',
    title: 'Media',
    href: '/admin/media',
    icon: 'M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
  },
  {
    id: 'profile',
    title: 'Hồ sơ',
    href: '/admin/profile',
    icon: 'M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z'
  },
  {
    id: 'settings',
    title: 'Cài đặt',
    href: '/admin/settings',
    icon: 'M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z M15 12a3 3 0 11-6 0 3 3 0 016 0z'
  }
];

// 🎯 Pre-compute dropdown states cho tất cả menu items
menuItems.forEach(item => {
  if (item.hasDropdown) {
    const shouldBeOpen = computeServerSideDropdownState(currentPath, item);
    serverSideDropdownStates.set(item.id, shouldBeOpen);
  }
});

// Check if menu item is active
function isActive(href: string) {
  if (href === '/admin') {
    return currentPath === '/admin' || currentPath === '/admin/';
  }

  // Exact match for sub-items to avoid conflicts

  // Articles
  if (href === '/admin/articles') {
    return currentPath === '/admin/articles' || currentPath === '/admin/articles/';
  }
  if (href === '/admin/articles/create') {
    return currentPath === '/admin/articles/create' || currentPath === '/admin/articles/create/';
  }

  // Categories
  if (href === '/admin/categories') {
    return currentPath === '/admin/categories' || currentPath === '/admin/categories/';
  }
  if (href === '/admin/categories/create') {
    return currentPath === '/admin/categories/create' || currentPath === '/admin/categories/create/';
  }

  // Users
  if (href === '/admin/users') {
    return currentPath === '/admin/users' || currentPath === '/admin/users/';
  }
  if (href === '/admin/users/create') {
    return currentPath === '/admin/users/create' || currentPath === '/admin/users/create/';
  }

  // For other paths, use startsWith
  return currentPath.startsWith(href);
}

// Check if dropdown should be open (any sub-item is active)
function isDropdownActive(item: any) {
  if (!item.hasDropdown || !item.subItems) return false;
  return item.subItems.some((subItem: any) => isActive(subItem.href));
}
---

<!-- Mobile Overlay -->
<div id="mobile-overlay" class="fixed inset-0 bg-gray-600 bg-opacity-75 z-40 lg:hidden hidden"></div>

<!-- Sidebar với pre-loaded state -->
<div id="admin-sidebar"
     class="fixed inset-y-0 left-0 z-50 flex flex-col w-64 -translate-x-full lg:translate-x-0 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 transition-all duration-150 ease-in-out"
     data-server-dropdown-states={JSON.stringify(Object.fromEntries(serverSideDropdownStates))}>
  
  <!-- Logo Section -->
  <div class="flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700">
    <div class="flex items-center space-x-3">
      <div class="w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
        </svg>
      </div>
      <div id="sidebar-brand">
        <h1 class="text-lg font-semibold text-gray-900 dark:text-gray-100">Admin</h1>
        <p class="text-xs text-gray-500 dark:text-gray-400">IQ Test System</p>
      </div>
    </div>

    <!-- Close Button - Mobile -->
    <button
      id="sidebar-close-btn"
      class="lg:hidden flex items-center justify-center w-8 h-8 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg"
    >
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <!-- Navigation Menu -->
  <nav class="flex-1 px-3 py-4 space-y-1 overflow-y-auto">
    {menuItems.map((item) => (
      <div class="menu-item-container">
        {item.hasDropdown ? (
          <!-- Dropdown Menu Item -->
          <div>
            <button
              class={`dropdown-toggle w-full group flex items-center justify-between px-3 py-2 text-sm font-medium rounded-lg ${
                isDropdownActive(item)
                  ? 'bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400'
                  : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100'
              }`}
              data-dropdown-id={item.id}
            >
              <div class="flex items-center">
                <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon}></path>
                </svg>
                <span class="sidebar-text truncate">{item.title}</span>
              </div>
              <svg class={`dropdown-arrow w-4 h-4 transition-transform duration-200 sidebar-text ${serverSideDropdownStates.get(item.id) ? 'rotate-90' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </button>

            <!-- Dropdown Content với server-side state -->
            <div class={`dropdown-content overflow-hidden ${serverSideDropdownStates.get(item.id) ? 'dropdown-open' : 'dropdown-closed'}`}
                 data-dropdown-content={item.id}
                 data-server-state={serverSideDropdownStates.get(item.id) ? 'open' : 'closed'}>
              <div class="py-1 space-y-1">
                {item.subItems?.map((subItem: any) => (
                  <a
                    href={subItem.href}
                    class={`group flex items-center px-3 py-2 ml-6 text-sm font-medium rounded-lg ${
                      isActive(subItem.href)
                        ? 'bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 border-r-2 border-blue-600 dark:border-blue-400'
                        : 'text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100'
                    }`}
                  >
                    <svg class="w-4 h-4 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={subItem.icon}></path>
                    </svg>
                    <span class="sidebar-text truncate">{subItem.title}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>
        ) : (
          <!-- Regular Menu Item -->
          <a
            href={item.href}
            class={`group flex items-center px-3 py-2 text-sm font-medium rounded-lg ${
              isActive(item.href)
                ? 'bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 border-r-2 border-blue-600 dark:border-blue-400'
                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100'
            }`}
          >
            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon}></path>
            </svg>
            <span class="sidebar-text truncate">{item.title}</span>
          </a>
        )}
      </div>
    ))}
  </nav>

  <!-- Bottom Section -->
  <div class="p-3 border-t border-gray-200 dark:border-gray-700">
    <!-- Dark Mode Toggle -->
    <button
      id="sidebar-theme-toggle"
      class="w-full flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100 rounded-lg"
    >
      <svg class="w-5 h-5 mr-3 flex-shrink-0 theme-icon-light" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
      </svg>
      <svg class="w-5 h-5 mr-3 flex-shrink-0 theme-icon-dark hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
      </svg>
      <span class="sidebar-text theme-text">Dark Mode</span>
    </button>

    <!-- Back to Site -->
    <a
      href="/"
      class="w-full flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100 rounded-lg mt-1"
    >
      <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
      </svg>
      <span class="sidebar-text">Về trang chủ</span>
    </a>

    <!-- Collapse Toggle - Desktop -->
    <button
      id="sidebar-collapse-btn"
      class="hidden lg:flex w-full items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100 rounded-lg mt-1"
    >
      <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      <span class="sidebar-text">Thu nhỏ</span>
    </button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sidebar = document.getElementById('admin-sidebar');
    const overlay = document.getElementById('mobile-overlay');
    const collapseBtn = document.getElementById('sidebar-collapse-btn');
    const closeBtn = document.getElementById('sidebar-close-btn');
    const themeToggle = document.getElementById('sidebar-theme-toggle');
    const sidebarTexts = document.querySelectorAll('.sidebar-text');
    const sidebarBrand = document.getElementById('sidebar-brand');
    const themeIconLight = document.querySelector('.theme-icon-light');
    const themeIconDark = document.querySelector('.theme-icon-dark');
    const themeText = document.querySelector('.theme-text');
    const mainContent = document.getElementById('admin-main-content');

    // Simple state management
    let isCollapsed = localStorage.getItem('admin-sidebar-collapsed') === 'true';
    let isMobileOpen = false;

    // Initialize sidebar state
    function initSidebar() {

      if (isCollapsed) {
        sidebar?.classList.add('collapsed');
        sidebar?.classList.remove('w-64');
        sidebar?.classList.add('w-16');
        sidebarTexts.forEach(text => text.classList.add('hidden'));
        sidebarBrand?.classList.add('hidden');
        collapseBtn?.querySelector('svg path')?.setAttribute('d', 'M9 5l7 7-7 7');

        // Điều chỉnh main content cho collapsed state
        if (mainContent) {
          mainContent.classList.remove('lg:pl-64');
          mainContent.classList.add('lg:pl-16');
        }
      } else {
        // Đảm bảo main content có padding đúng cho expanded state
        if (mainContent) {
          mainContent.classList.remove('lg:pl-16');
          mainContent.classList.add('lg:pl-64');
        }
      }
      updateThemeIcon();
    }

    // Toggle sidebar collapse
    function toggleCollapse() {
      isCollapsed = !isCollapsed;
      localStorage.setItem('admin-sidebar-collapsed', isCollapsed.toString());

      if (isCollapsed) {
        sidebar?.classList.add('collapsed');
        sidebar?.classList.remove('w-64');
        sidebar?.classList.add('w-16');
        sidebarTexts.forEach(text => text.classList.add('hidden'));
        sidebarBrand?.classList.add('hidden');
        collapseBtn?.querySelector('svg path')?.setAttribute('d', 'M9 5l7 7-7 7');

        // Điều chỉnh main content cho collapsed state
        if (mainContent) {
          mainContent.classList.remove('lg:pl-64');
          mainContent.classList.add('lg:pl-16');
        }

        // Close all dropdowns when collapsing
        openDropdowns.forEach(dropdownId => {
          const dropdownContent = document.querySelector(`[data-dropdown-content="${dropdownId}"]`);
          const dropdownArrow = document.querySelector(`[data-dropdown-id="${dropdownId}"] .dropdown-arrow`);
          if (dropdownContent && dropdownArrow) {
            dropdownContent.classList.remove('dropdown-open');
            dropdownContent.classList.add('dropdown-closed');
            dropdownArrow.classList.remove('rotate-90');
          }
        });
      } else {
        sidebar?.classList.remove('collapsed');
        sidebar?.classList.remove('w-16');
        sidebar?.classList.add('w-64');
        sidebarTexts.forEach(text => text.classList.remove('hidden'));
        sidebarBrand?.classList.remove('hidden');
        collapseBtn?.querySelector('svg path')?.setAttribute('d', 'M15 19l-7-7 7-7');

        // Điều chỉnh main content cho expanded state
        if (mainContent) {
          mainContent.classList.remove('lg:pl-16');
          mainContent.classList.add('lg:pl-64');
        }

        // Restore dropdown states when expanding
        openDropdowns.forEach(dropdownId => {
          const dropdownContent = document.querySelector(`[data-dropdown-content="${dropdownId}"]`);
          const dropdownArrow = document.querySelector(`[data-dropdown-id="${dropdownId}"] .dropdown-arrow`);
          if (dropdownContent && dropdownArrow) {
            dropdownContent.classList.remove('dropdown-closed');
            dropdownContent.classList.add('dropdown-open');
            dropdownArrow.classList.add('rotate-90');
          }
        });
      }
    }

    // Toggle mobile sidebar
    function toggleMobile() {
      isMobileOpen = !isMobileOpen;
      
      if (isMobileOpen) {
        sidebar?.classList.remove('-translate-x-full');
        overlay?.classList.remove('hidden');
      } else {
        sidebar?.classList.add('-translate-x-full');
        overlay?.classList.add('hidden');
      }
    }

    // Update theme icon
    function updateThemeIcon() {
      const isDark = document.documentElement.classList.contains('dark');
      if (isDark) {
        themeIconLight?.classList.remove('hidden');
        themeIconDark?.classList.add('hidden');
        if (themeText) themeText.textContent = 'Light Mode';
      } else {
        themeIconLight?.classList.add('hidden');
        themeIconDark?.classList.remove('hidden');
        if (themeText) themeText.textContent = 'Dark Mode';
      }
    }

    // Toggle theme
    function toggleTheme() {
      const isDark = document.documentElement.classList.contains('dark');

      if (isDark) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }

      updateThemeIcon();
    }

    // Dropdown functionality
    let openDropdowns = new Set();

    function toggleDropdown(dropdownId) {
      const dropdownContent = document.querySelector(`[data-dropdown-content="${dropdownId}"]`);
      const dropdownArrow = document.querySelector(`[data-dropdown-id="${dropdownId}"] .dropdown-arrow`);

      if (!dropdownContent || !dropdownArrow) return;

      const isOpen = openDropdowns.has(dropdownId);

      if (isOpen) {
        // Close dropdown
        dropdownContent.classList.remove('dropdown-open');
        dropdownContent.classList.add('dropdown-closed');
        dropdownArrow.classList.remove('rotate-90');
        openDropdowns.delete(dropdownId);
        localStorage.removeItem(`dropdown-${dropdownId}-open`);
      } else {
        // Open dropdown
        dropdownContent.classList.remove('dropdown-closed');
        dropdownContent.classList.add('dropdown-open');
        dropdownArrow.classList.add('rotate-90');
        openDropdowns.add(dropdownId);
        localStorage.setItem(`dropdown-${dropdownId}-open`, 'true');
      }
    }

    let dropdownsInitialized = false;

    function initDropdowns() {
      // Prevent multiple initializations
      if (dropdownsInitialized) return;
      dropdownsInitialized = true;

      console.log('🎯 Initializing dropdowns');

      // Initialize dropdown states - 🚀 INSTANT với pre-loaded data
      const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
      dropdownToggles.forEach(toggle => {
        const dropdownId = toggle.getAttribute('data-dropdown-id');
        if (dropdownId) {
          const dropdownContent = document.querySelector(`[data-dropdown-content="${dropdownId}"]`);
          const dropdownArrow = toggle.querySelector('.dropdown-arrow');

          if (dropdownContent && dropdownArrow) {
            // Simple state resolution: localStorage only
            const isOpen = localStorage.getItem(`dropdown-${dropdownId}-open`) === 'true';

            if (isOpen) {
              openDropdowns.add(dropdownId);
              // Sync DOM immediately
              dropdownContent.classList.remove('dropdown-closed');
              dropdownContent.classList.add('dropdown-open');
              dropdownArrow.classList.add('rotate-90');
            } else {
              // Ensure closed state
              dropdownContent.classList.remove('dropdown-open');
              dropdownContent.classList.add('dropdown-closed');
              dropdownArrow.classList.remove('rotate-90');
            }
          }

          // Add click event listener
          toggle.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            toggleDropdown(dropdownId);
          });
        }
      });
    }

    // Event listeners
    collapseBtn?.addEventListener('click', toggleCollapse);
    closeBtn?.addEventListener('click', toggleMobile);
    overlay?.addEventListener('click', toggleMobile);
    themeToggle?.addEventListener('click', toggleTheme);

    // Make functions globally available
    window.adminSidebar = {
      toggleMobile,
      toggleCollapse,
      isCollapsed: () => isCollapsed,
      isMobileOpen: () => isMobileOpen
    };

    // Initialize with proper order to prevent flashing
    initDropdowns();
    initSidebar();
  });
</script>

<style>
  /* 🎯 INSTANT RENDERING: Sidebar hiển thị ngay lập tức với pre-loaded state */
  #admin-sidebar {
    opacity: 1;
    visibility: visible;
  }

  /* Smooth transitions chỉ cho user interactions, không cho initial render */
  .dropdown-content {
    transition: max-height 0.2s ease-out, opacity 0.15s ease-out;
    will-change: auto;
    transform: translateZ(0);
    backface-visibility: hidden;
  }

  .dropdown-arrow {
    transition: transform 0.2s ease-out;
    will-change: auto;
    transform: translateZ(0);
  }

  /* Disable transitions during page load để tránh flash */
  .no-transitions * {
    transition: none !important;
    animation: none !important;
  }

  .no-transitions .sidebar-text {
    transition: none !important;
  }

  .no-transitions #sidebar-brand {
    transition: none !important;
  }

  #admin-sidebar.collapsed .sidebar-text {
    opacity: 0;
    pointer-events: none;
  }

  #admin-sidebar.collapsed #sidebar-brand {
    opacity: 0;
    pointer-events: none;
  }

  /* Smooth transitions for sidebar text and brand */
  .sidebar-text {
    transition: opacity 0.15s ease-in-out;
    white-space: nowrap;
    overflow: hidden;
  }

  #sidebar-brand {
    transition: opacity 0.15s ease-in-out;
    white-space: nowrap;
    overflow: hidden;
  }

  /* Ensure buttons maintain consistent height */
  #admin-sidebar button,
  #admin-sidebar a {
    min-height: 40px;
  }

  /* Hide dropdown content when sidebar is collapsed */
  #admin-sidebar.collapsed .dropdown-content {
    display: none;
  }

  /* Hide dropdown arrow when sidebar is collapsed */
  #admin-sidebar.collapsed .dropdown-arrow {
    display: none;
  }

  /* Stable and smooth transitions for dropdown */
  .dropdown-content {
    transition: max-height 0.2s ease-out, opacity 0.15s ease-out;
    will-change: auto;
    transform: translateZ(0); /* Force GPU acceleration */
    backface-visibility: hidden; /* Prevent flickering */
  }

  .dropdown-arrow {
    transition: transform 0.2s ease-out;
    will-change: auto;
    transform: translateZ(0); /* Force GPU acceleration */
  }

  /* Stable states to prevent layout shifts */
  .dropdown-content.dropdown-open {
    max-height: 200px;
    opacity: 1;
  }

  .dropdown-content.dropdown-closed {
    max-height: 0;
    opacity: 0;
  }

  /* Prevent layout shifts during transitions */
  .menu-item-container {
    contain: layout style;
  }

  /* Stable sidebar to prevent flickering */
  #admin-sidebar {
    transform: translateZ(0);
    backface-visibility: hidden;
    contain: layout style;
  }

  /* Ensure sidebar transition is disabled during initial load */
  .no-transitions #admin-sidebar {
    transition: none !important;
  }

  /* Mobile responsive behavior */
  @media (max-width: 1023px) {
    #admin-sidebar {
      animation: none !important; /* Disable fade-in on mobile */
      opacity: 1 !important;
      transform: translateX(-100%);
      transition: transform 0.3s ease-in-out;
    }

    #admin-sidebar.mobile-open {
      transform: translateX(0);
    }
  }

  /* Ensure proper spacing for sub-items */
  .dropdown-content .sidebar-text {
    font-size: 0.875rem;
  }

  /* Prevent any layout shifts */
  .dropdown-toggle {
    position: relative;
    z-index: 1;
  }

  /* Smooth hover effects without layout shifts */
  .dropdown-toggle:hover,
  .menu-item-container a:hover {
    transform: translateZ(0);
  }

  /* Ensure consistent height for menu items */
  .dropdown-toggle,
  .menu-item-container > a {
    min-height: 40px;
    display: flex;
    align-items: center;
  }


</style>
