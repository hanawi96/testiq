---
import BaseLayout from '../layouts/BaseLayout.astro';

// Pro features data
const proFeatures = {
  pricing: {
    monthly: 2,
    currency: 'USD',
    originalPrice: 9.99,
    discount: 80
  },
  
  plans: {
    free: {
      name: 'Mi·ªÖn ph√≠',
      price: 0,
      features: [
        '10 c√¢u h·ªèi IQ c∆° b·∫£n',
        'K·∫øt qu·∫£ IQ t·ªïng qu√°t',
        'L·ªãch s·ª≠ test c∆° b·∫£n',
        'Chia s·∫ª k·∫øt qu·∫£',
        'H·ªó tr·ª£ c·ªông ƒë·ªìng'
      ],
      limitations: [
        'Ch·ªâ 1 test/ng√†y',
        'Kh√¥ng c√≥ ph√¢n t√≠ch chi ti·∫øt',
        'Kh√¥ng c√≥ g·ª£i √Ω c·∫£i thi·ªán',
        'Qu·∫£ng c√°o hi·ªÉn th·ªã'
      ]
    },
    pro: {
      name: 'Pro',
      price: 2,
      features: [
        '50+ c√¢u h·ªèi IQ chuy√™n s√¢u',
        'Ph√¢n t√≠ch chi ti·∫øt 12 k·ªπ nƒÉng',
        'AI Coach c√° nh√¢n h√≥a',
        'L·ªô tr√¨nh c·∫£i thi·ªán IQ',
        'So s√°nh v·ªõi chuy√™n gia',
        'B√°o c√°o PDF chuy√™n nghi·ªáp',
        'L·ªãch s·ª≠ kh√¥ng gi·ªõi h·∫°n',
        'Th·ªëng k√™ ti·∫øn b·ªô n√¢ng cao',
        '∆Øu ti√™n h·ªó tr·ª£ 24/7',
        'Kh√¥ng qu·∫£ng c√°o',
        'Sync ƒëa thi·∫øt b·ªã',
        'Xu·∫•t d·ªØ li·ªáu'
      ]
    }
  },

  exclusiveFeatures: [
    {
      icon: 'üß†',
      title: 'AI Coach th√¥ng minh',
      description: 'Hu·∫•n luy·ªán vi√™n AI c√° nh√¢n ph√¢n t√≠ch ƒëi·ªÉm y·∫øu v√† ƒë∆∞a ra l·ªô tr√¨nh c·∫£i thi·ªán IQ hi·ªáu qu·∫£',
      category: 'AI-Powered'
    },
    {
      icon: 'üìä',
      title: 'Ph√¢n t√≠ch 12 k·ªπ nƒÉng',
      description: 'ƒê√°nh gi√° chi ti·∫øt: Logic, To√°n h·ªçc, Ng√¥n ng·ªØ, Kh√¥ng gian, Tr√≠ nh·ªõ, T·ªëc ƒë·ªô, Pattern, Suy lu·∫≠n...',
      category: 'Deep Analysis'
    },
    {
      icon: 'üéØ',
      title: 'L·ªô tr√¨nh c√° nh√¢n h√≥a',
      description: 'K·∫ø ho·∫°ch luy·ªán t·∫≠p 30 ng√†y ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng d·ª±a tr√™n ƒëi·ªÉm m·∫°nh/y·∫øu c·ªßa b·∫°n',
      category: 'Personalized'
    },
    {
      icon: 'üèÜ',
      title: 'So s√°nh chuy√™n gia',
      description: 'ƒê·ªëi chi·∫øu k·∫øt qu·∫£ v·ªõi c√°c chuy√™n gia trong lƒ©nh v·ª±c: B√°c sƒ©, K·ªπ s∆∞, Nh√† khoa h·ªçc...',
      category: 'Professional'
    },
    {
      icon: 'üìà',
      title: 'Tracking ti·∫øn b·ªô',
      description: 'Theo d√µi s·ª± c·∫£i thi·ªán theo th·ªùi gian v·ªõi bi·ªÉu ƒë·ªì chi ti·∫øt v√† milestone',
      category: 'Progress'
    },
    {
      icon: 'üíé',
      title: 'Unlimited Tests',
      description: 'L√†m test kh√¥ng gi·ªõi h·∫°n v·ªõi 500+ c√¢u h·ªèi t·ª´ c√°c ngu·ªìn uy t√≠n qu·ªëc t·∫ø',
      category: 'Unlimited'
    }
  ],

  testimonials: [
    {
      name: 'Dr. Nguy·ªÖn Minh',
      role: 'B√°c sƒ© Th·∫ßn kinh',
      avatar: 'NM',
      rating: 5,
      comment: 'AI Coach ƒë√£ gi√∫p t√¥i c·∫£i thi·ªán 15 ƒëi·ªÉm IQ ch·ªâ trong 1 th√°ng. Ph√¢n t√≠ch r·∫•t ch√≠nh x√°c v√† khoa h·ªçc.',
      improvement: '+15 IQ points'
    },
    {
      name: 'L√™ H·ªìng Anh',
      role: 'Software Engineer',
      avatar: 'LA',
      rating: 5,
      comment: 'L·ªô tr√¨nh c√° nh√¢n h√≥a r·∫•t hi·ªáu qu·∫£. T·ª´ 125 l√™n 142 IQ, gi√∫p t√¥i thƒÉng ti·∫øn trong c√¥ng vi·ªác.',
      improvement: '+17 IQ points'
    },
    {
      name: 'Tr·∫ßn VƒÉn B√¨nh',
      role: 'Sinh vi√™n Y khoa',
      avatar: 'TB',
      rating: 5,
      comment: 'So s√°nh v·ªõi chuy√™n gia gi√∫p t√¥i hi·ªÉu r√µ v·ªã tr√≠ c·ªßa m√¨nh. ƒê·ªông l·ª±c ƒë·ªÉ ph·∫•n ƒë·∫•u h∆°n.',
      improvement: '+12 IQ points'
    }
  ],

  faqs: [
    {
      q: 'T·∫°i sao ch·ªâ $2/th√°ng m√† c√≥ nhi·ªÅu t√≠nh nƒÉng v·∫≠y?',
      a: 'Ch√∫ng t√¥i tin r·∫±ng ph√°t tri·ªÉn tr√≠ tu·ªá kh√¥ng n√™n b·ªã gi·ªõi h·∫°n b·ªüi chi ph√≠. Gi√° $2/th√°ng gi√∫p duy tr√¨ h·ªá th·ªëng AI v√† nghi√™n c·ª©u khoa h·ªçc.'
    },
    {
      q: 'AI Coach ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o?',
      a: 'AI Coach ph√¢n t√≠ch k·∫øt qu·∫£ test c·ªßa b·∫°n, so s√°nh v·ªõi database 1M+ ng∆∞·ªùi d√πng, v√† t·∫°o ra l·ªô tr√¨nh c·∫£i thi·ªán c√° nh√¢n h√≥a d·ª±a tr√™n khoa h·ªçc nh·∫≠n th·ª©c.'
    },
    {
      q: 'T√¥i c√≥ th·ªÉ h·ªßy b·∫•t c·ª© l√∫c n√†o kh√¥ng?',
      a: 'C√≥, b·∫°n c√≥ th·ªÉ h·ªßy subscription b·∫•t c·ª© l√∫c n√†o. Kh√¥ng c√≥ ph√≠ r√†ng bu·ªôc hay h·ª£p ƒë·ªìng d√†i h·∫°n.'
    },
    {
      q: 'C√≥ ƒë·∫£m b·∫£o c·∫£i thi·ªán IQ kh√¥ng?',
      a: 'Ch√∫ng t√¥i cam k·∫øt b·∫°n s·∫Ω th·∫•y s·ª± c·∫£i thi·ªán r√µ r·ªát sau 30 ng√†y s·ª≠ d·ª•ng. N·∫øu kh√¥ng h√†i l√≤ng, ho√†n ti·ªÅn 100%.'
    }
  ]
};

// Helper functions
const formatPrice = (price: number) => `$${price}`;
const calculateSavings = (original: number, current: number) => Math.round(((original - current) / original) * 100);
---

<BaseLayout
  title="N√¢ng c·∫•p Pro - Ph√°t tri·ªÉn IQ v·ªõi AI Coach"
  description="N√¢ng c·∫•p l√™n IQ Pro ƒë·ªÉ ƒë∆∞·ª£c AI Coach c√° nh√¢n, ph√¢n t√≠ch 12 k·ªπ nƒÉng chi ti·∫øt v√† l·ªô tr√¨nh c·∫£i thi·ªán IQ hi·ªáu qu·∫£. Ch·ªâ $2/th√°ng."
>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-slate-50 via-white to-blue-50 pt-24 pb-16 overflow-hidden">
    <!-- Background decoration -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5"></div>
    <div class="absolute top-20 right-10 w-72 h-72 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full opacity-10 blur-3xl"></div>
    <div class="absolute bottom-20 left-10 w-96 h-96 bg-gradient-to-br from-indigo-400 to-pink-500 rounded-full opacity-10 blur-3xl"></div>
    
    <div class="relative max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <!-- Badge -->
      <div class="inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-yellow-100 to-orange-100 text-yellow-800 text-sm font-medium mb-8">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>
        N√¢ng c·∫•p Pro
      </div>
      
      <!-- Main heading -->
      <h1 class="text-4xl md:text-6xl font-bold text-gray-900 mb-6">
        Ph√°t tri·ªÉn IQ v·ªõi
        <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
          AI Coach
        </span>
      </h1>
      
      <!-- Subtitle -->
      <p class="text-xl md:text-2xl text-gray-600 font-medium mb-4">
        C·∫£i thi·ªán tr√≠ th√¥ng minh m·ªôt c√°ch khoa h·ªçc v√† hi·ªáu qu·∫£
      </p>
      
      <p class="text-lg text-gray-500 max-w-2xl mx-auto mb-8">
        ƒê∆∞·ª£c hu·∫•n luy·ªán b·ªüi AI Coach c√° nh√¢n, ph√¢n t√≠ch 12 k·ªπ nƒÉng nh·∫≠n th·ª©c v√† l·ªô tr√¨nh c·∫£i thi·ªán ƒë∆∞·ª£c c√° nh√¢n h√≥a
      </p>

      <!-- Special Offer -->
      <div class="bg-gradient-to-r from-red-500 to-pink-600 text-white rounded-2xl p-6 max-w-md mx-auto mb-8">
        <div class="text-sm font-medium mb-2">üî• ∆Øu ƒë√£i ƒë·∫∑c bi·ªát</div>
        <div class="text-2xl font-bold mb-1">
          {formatPrice(proFeatures.pricing.monthly)}/th√°ng
        </div>
        <div class="text-sm line-through opacity-75 mb-2">
          Thay v√¨ {formatPrice(proFeatures.pricing.originalPrice)}
        </div>
        <div class="text-sm font-medium">
          Ti·∫øt ki·ªám {calculateSavings(proFeatures.pricing.originalPrice, proFeatures.pricing.monthly)}% ‚Ä¢ Ch·ªâ trong th√°ng n√†y
        </div>
      </div>

      <!-- CTA Button -->
      <button 
        id="upgradeBtn"
        class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-500 to-purple-600 text-white font-medium rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl text-lg"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
        </svg>
        N√¢ng c·∫•p Pro ngay
      </button>
      
      <p class="text-sm text-gray-500 mt-4">
        ‚úÖ D√πng th·ª≠ 7 ng√†y mi·ªÖn ph√≠ ‚Ä¢ ‚úÖ H·ªßy b·∫•t c·ª© l√∫c n√†o ‚Ä¢ ‚úÖ Ho√†n ti·ªÅn 100%
      </p>
    </div>
  </section>

  <!-- Comparison Table -->
  <section class="py-16 bg-white">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">So s√°nh g√≥i d·ªãch v·ª•</h2>
        <p class="text-gray-600">Xem s·ª± kh√°c bi·ªát gi·ªØa g√≥i Mi·ªÖn ph√≠ v√† Pro</p>
      </div>

      <div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
        <!-- Free Plan -->
        <div class="bg-gray-50 rounded-2xl p-8 border border-gray-200">
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-900 mb-2">{proFeatures.plans.free.name}</h3>
            <div class="text-4xl font-bold text-gray-600 mb-2">
              {formatPrice(proFeatures.plans.free.price)}
            </div>
            <p class="text-gray-500">M√£i m√£i mi·ªÖn ph√≠</p>
          </div>
          
          <div class="space-y-4 mb-8">
            {proFeatures.plans.free.features.map(feature => (
              <div class="flex items-center space-x-3">
                <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                </svg>
                <span class="text-gray-700">{feature}</span>
              </div>
            ))}
            
            {proFeatures.plans.free.limitations.map(limitation => (
              <div class="flex items-center space-x-3">
                <svg class="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
                <span class="text-gray-500">{limitation}</span>
              </div>
            ))}
          </div>
          
          <button class="w-full py-3 bg-gray-200 text-gray-700 rounded-xl font-medium hover:bg-gray-300 transition-colors">
            G√≥i hi·ªán t·∫°i
          </button>
        </div>

        <!-- Pro Plan -->
        <div class="bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl p-8 border-2 border-blue-200 relative">
          <!-- Popular badge -->
          <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
            <span class="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-4 py-2 rounded-full text-sm font-medium">
              üî• Ph·ªï bi·∫øn nh·∫•t
            </span>
          </div>
          
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-900 mb-2">{proFeatures.plans.pro.name}</h3>
            <div class="text-4xl font-bold text-blue-600 mb-2">
              {formatPrice(proFeatures.plans.pro.price)}
            </div>
            <p class="text-gray-600">per month</p>
          </div>
          
          <div class="space-y-4 mb-8">
            {proFeatures.plans.pro.features.map(feature => (
              <div class="flex items-center space-x-3">
                <svg class="w-5 h-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                </svg>
                <span class="text-gray-700">{feature}</span>
              </div>
            ))}
          </div>
          
          <button class="w-full py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl font-medium hover:from-blue-600 hover:to-purple-700 transition-all shadow-md hover:shadow-lg">
            N√¢ng c·∫•p ngay
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Exclusive Features -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">T√≠nh nƒÉng ƒë·ªôc quy·ªÅn Pro</h2>
        <p class="text-gray-600">Nh·ªØng c√¥ng c·ª• m·∫°nh m·∫Ω ch·ªâ c√≥ trong g√≥i Pro</p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {proFeatures.exclusiveFeatures.map((feature, index) => (
          <div class="group bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200">
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-gradient-to-br from-blue-100 to-purple-100 rounded-2xl flex items-center justify-center text-2xl group-hover:scale-110 transition-transform">
                {feature.icon}
              </div>
              <div class="flex-1">
                <div class="flex items-center space-x-2 mb-2">
                  <h3 class="text-lg font-semibold text-gray-900">{feature.title}</h3>
                  <span class="text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded-full">
                    {feature.category}
                  </span>
                </div>
                <p class="text-gray-600 text-sm leading-relaxed">{feature.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Testimonials -->
  <section class="py-16 bg-white">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">Ng∆∞·ªùi d√πng n√≥i g√¨ v·ªÅ Pro?</h2>
        <p class="text-gray-600">C√¢u chuy·ªán th√†nh c√¥ng t·ª´ c·ªông ƒë·ªìng Pro</p>
      </div>

      <div class="grid md:grid-cols-3 gap-8">
        {proFeatures.testimonials.map((testimonial, index) => (
          <div class="bg-gradient-to-br from-gray-50 to-blue-50 rounded-2xl p-6 border border-gray-100">
            <div class="flex items-center space-x-3 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                <span class="text-white font-semibold text-sm">{testimonial.avatar}</span>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">{testimonial.name}</h4>
                <p class="text-sm text-gray-600">{testimonial.role}</p>
              </div>
              <div class="ml-auto">
                <div class="bg-green-100 text-green-700 text-xs px-2 py-1 rounded-full font-medium">
                  {testimonial.improvement}
                </div>
              </div>
            </div>
            
            <div class="flex items-center space-x-1 mb-3">
              {[...Array(testimonial.rating)].map((_, i) => (
                <svg key={i} class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              ))}
            </div>
            
            <p class="text-gray-700 text-sm leading-relaxed italic">
              "{testimonial.comment}"
            </p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- FAQ -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
        <p class="text-gray-600">Gi·∫£i ƒë√°p nh·ªØng th·∫Øc m·∫Øc v·ªÅ g√≥i Pro</p>
      </div>

      <div class="space-y-4">
        {proFeatures.faqs.map((faq, index) => (
          <details class="group bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden">
            <summary class="flex items-center justify-between p-6 cursor-pointer hover:bg-gray-50 transition-colors">
              <h3 class="font-semibold text-gray-900 pr-4">{faq.q}</h3>
              <div class="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center group-open:bg-blue-500 group-open:text-white transition-all">
                <svg class="w-4 h-4 group-open:rotate-45 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
              </div>
            </summary>
            <div class="px-6 pb-6">
              <p class="text-gray-600 leading-relaxed">{faq.a}</p>
            </div>
          </details>
        ))}
      </div>
    </div>
  </section>

  <!-- Final CTA -->
  <section class="py-16 bg-gradient-to-r from-blue-600 to-purple-700">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="bg-white bg-opacity-10 rounded-2xl p-8 backdrop-blur-sm">
        <h2 class="text-3xl font-bold text-white mb-4">
          S·∫µn s√†ng ph√°t tri·ªÉn IQ c·ªßa b·∫°n?
        </h2>
        <p class="text-blue-100 text-lg mb-8 max-w-2xl mx-auto">
          Tham gia c√πng 50,000+ ng∆∞·ªùi d√πng ƒë√£ c·∫£i thi·ªán IQ v·ªõi AI Coach. 
          B·∫Øt ƒë·∫ßu h√†nh tr√¨nh ph√°t tri·ªÉn tr√≠ tu·ªá ngay h√¥m nay.
        </p>
        
        <div class="flex flex-col sm:flex-row items-center justify-center gap-4 mb-6">
          <button class="px-8 py-4 bg-white text-blue-600 font-semibold rounded-xl hover:bg-gray-100 transition-colors shadow-lg">
            D√πng th·ª≠ 7 ng√†y mi·ªÖn ph√≠
          </button>
          <button class="px-8 py-4 bg-yellow-500 text-gray-900 font-semibold rounded-xl hover:bg-yellow-400 transition-colors shadow-lg">
            N√¢ng c·∫•p Pro - {formatPrice(proFeatures.pricing.monthly)}/th√°ng
          </button>
        </div>
        
        <div class="flex flex-wrap justify-center gap-6 text-blue-100 text-sm">
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span>Kh√¥ng r√†ng bu·ªôc</span>
          </div>
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span>Ho√†n ti·ªÅn 100%</span>
          </div>
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
            <span>H·ªó tr·ª£ 24/7</span>
          </div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  /* Grid pattern background */
  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, #e5e7eb 1px, transparent 1px),
      linear-gradient(to bottom, #e5e7eb 1px, transparent 1px);
    background-size: 20px 20px;
  }
  
  /* Custom details styling */
  details[open] summary {
    margin-bottom: 0;
  }
  
  details summary::-webkit-details-marker {
    display: none;
  }
  
  /* Smooth animations */
  .fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Add scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry, index) => {
      if (entry.isIntersecting) {
        setTimeout(() => {
          entry.target.classList.add('fade-in-up');
        }, index * 100);
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  // Observe sections
  document.querySelectorAll('section > div').forEach(el => {
    observer.observe(el);
  });

  // Upgrade button functionality
  document.getElementById('upgradeBtn')?.addEventListener('click', () => {
    // Show upgrade modal or redirect to payment
    showUpgradeModal();
  });

  // Mock upgrade modal (replace with real payment integration)
  function showUpgradeModal() {
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4';
    modal.innerHTML = `
      <div class="bg-white rounded-2xl p-8 max-w-md w-full">
        <div class="text-center mb-6">
          <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-gray-900 mb-2">N√¢ng c·∫•p Pro</h3>
          <p class="text-gray-600">Ch·ªâ $2/th√°ng ‚Ä¢ H·ªßy b·∫•t c·ª© l√∫c n√†o</p>
        </div>
        
        <div class="space-y-4 mb-6">
          <div class="bg-gray-50 rounded-xl p-4">
            <div class="flex justify-between items-center mb-2">
              <span class="font-medium">IQ Pro Monthly</span>
              <span class="font-bold text-blue-600">$2.00</span>
            </div>
            <div class="text-sm text-gray-500">Gia h·∫°n h√†ng th√°ng</div>
          </div>
          
          <div class="text-sm text-gray-600">
            ‚úÖ D√πng th·ª≠ 7 ng√†y mi·ªÖn ph√≠<br>
            ‚úÖ H·ªßy b·∫•t c·ª© l√∫c n√†o<br>
            ‚úÖ Ho√†n ti·ªÅn 100% n·∫øu kh√¥ng h√†i l√≤ng
          </div>
        </div>
        
        <div class="flex space-x-3">
          <button onclick="this.closest('.fixed').remove()" class="flex-1 py-3 bg-gray-200 text-gray-700 rounded-xl font-medium hover:bg-gray-300 transition-colors">
            H·ªßy
          </button>
          <button onclick="processUpgrade()" class="flex-1 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl font-medium hover:from-blue-600 hover:to-purple-700 transition-all">
            X√°c nh·∫≠n
          </button>
        </div>
      </div>
    `;
    
    document.body.appendChild(modal);
    
    // Close on outside click
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.remove();
      }
    });
  }

  // Mock upgrade process
  function processUpgrade() {
    const modal = document.querySelector('.fixed');
    const button = modal.querySelector('button[onclick="processUpgrade()"]');
    
    button.innerHTML = `
      <svg class="w-4 h-4 animate-spin mr-2" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      ƒêang x·ª≠ l√Ω...
    `;
    button.disabled = true;
    
    // Simulate payment processing
    setTimeout(() => {
      modal.innerHTML = `
        <div class="bg-white rounded-2xl p-8 max-w-md w-full text-center">
          <div class="w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-gray-900 mb-2">Ch√∫c m·ª´ng! üéâ</h3>
          <p class="text-gray-600 mb-6">B·∫°n ƒë√£ n√¢ng c·∫•p th√†nh c√¥ng l√™n IQ Pro. H√£y kh√°m ph√° nh·ªØng t√≠nh nƒÉng m·ªõi!</p>
          <button onclick="window.location.reload()" class="w-full py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl font-medium">
            B·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng Pro
          </button>
        </div>
      `;
      
      // Auto close after 3 seconds
      setTimeout(() => {
        modal.remove();
        // Could redirect to dashboard or reload page
        // window.location.href = '/dashboard';
      }, 3000);
    }, 2000);
  }

  // FAQ toggle functionality
  document.querySelectorAll('details').forEach(detail => {
    detail.addEventListener('toggle', () => {
      if (detail.open) {
        detail.querySelector('summary').classList.add('text-blue-600');
      } else {
        detail.querySelector('summary').classList.remove('text-blue-600');
      }
    });
  });
</script>