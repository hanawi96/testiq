---
/**
 * Admin Auth Test Page
 * Debug authentication issues
 */

// Import auth debug tools
import '../utils/auth-debug';
---

<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Auth Test</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-4xl mx-auto">
            <!-- Header -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    üîê Admin Authentication Test
                </h1>
                <p class="text-gray-600">
                    Debug v√† fix authentication issues
                </p>
            </div>

            <!-- Test Controls -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">
                    üß™ Test Controls
                </h2>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <button 
                        onclick="runAuthDebug()"
                        class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors"
                    >
                        üîç Debug Auth
                    </button>
                    
                    <button 
                        onclick="runQuickFix()"
                        class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors"
                    >
                        üîß Quick Fix
                    </button>
                    
                    <button 
                        onclick="createAdmin()"
                        class="bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 transition-colors"
                    >
                        üë§ Create Admin
                    </button>
                    
                    <button 
                        onclick="testLoginForm()"
                        class="bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition-colors"
                    >
                        üîê Test Login
                    </button>
                </div>

                <!-- Login Test Form -->
                <div class="border-t pt-4">
                    <h3 class="text-lg font-semibold mb-3">Quick Login Test</h3>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <input 
                            type="email" 
                            id="test-email" 
                            placeholder="Email" 
                            value="admin@test.com"
                            class="px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        >
                        <input 
                            type="password" 
                            id="test-password" 
                            placeholder="Password" 
                            value="admin123456"
                            class="px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        >
                        <button 
                            onclick="testLoginWithForm()"
                            class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition-colors"
                        >
                            Test Login
                        </button>
                    </div>
                </div>
            </div>

            <!-- Results Display -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">
                    üìä Test Results
                </h2>
                
                <div id="results" class="bg-gray-50 rounded-md p-4 min-h-[200px]">
                    <p class="text-gray-500 text-center">
                        Click a test button to see results here
                    </p>
                </div>
            </div>

            <!-- Status Cards -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                <!-- Auth Status -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900">Auth Status</h3>
                        <span id="auth-status" class="px-2 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                            Unknown
                        </span>
                    </div>
                    <div id="auth-details" class="text-sm text-gray-600">
                        <p>Session: <span id="session-status">-</span></p>
                        <p>User: <span id="user-status">-</span></p>
                    </div>
                </div>

                <!-- Database Status -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900">Database</h3>
                        <span id="db-status" class="px-2 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                            Unknown
                        </span>
                    </div>
                    <div id="db-details" class="text-sm text-gray-600">
                        <p>Connection: <span id="db-connection">-</span></p>
                        <p>Profiles: <span id="profiles-count">-</span></p>
                    </div>
                </div>

                <!-- Admin Status -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900">Admin Users</h3>
                        <span id="admin-status" class="px-2 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                            Unknown
                        </span>
                    </div>
                    <div id="admin-details" class="text-sm text-gray-600">
                        <p>Count: <span id="admin-count">-</span></p>
                        <p>Access: <span id="admin-access">-</span></p>
                    </div>
                </div>
            </div>

            <!-- Console Output -->
            <div class="bg-white rounded-lg shadow-sm p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">
                    üìù Console Output
                </h2>
                <div class="bg-black text-green-400 rounded-md p-4 font-mono text-sm h-64 overflow-y-auto" id="console-output">
                    <p>Console output will appear here...</p>
                    <p class="text-gray-500">Open browser DevTools for detailed logs</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global test functions
        let originalConsoleLog = console.log;
        let consoleOutput = document.getElementById('console-output');

        // Override console.log to show in page
        console.log = function(...args) {
            originalConsoleLog.apply(console, args);
            
            const message = args.map(arg => 
                typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg)
            ).join(' ');
            
            const p = document.createElement('p');
            p.textContent = `${new Date().toLocaleTimeString()}: ${message}`;
            consoleOutput.appendChild(p);
            consoleOutput.scrollTop = consoleOutput.scrollHeight;
        };

        function updateResults(content) {
            document.getElementById('results').innerHTML = content;
        }

        function updateStatus(type, status, details = {}) {
            const statusEl = document.getElementById(`${type}-status`);
            
            statusEl.textContent = status;
            statusEl.className = `px-2 py-1 rounded-full text-sm ${
                status === 'Good' || status === 'Active' || status === 'Connected' ? 'bg-green-100 text-green-800' :
                status === 'Warning' ? 'bg-yellow-100 text-yellow-800' :
                status === 'Error' || status === 'Failed' ? 'bg-red-100 text-red-800' :
                'bg-gray-100 text-gray-600'
            }`;
            
            Object.keys(details).forEach(key => {
                const el = document.getElementById(`${type}-${key}`);
                if (el) el.textContent = details[key];
            });
        }

        async function runAuthDebug() {
            console.log('üîç Running auth debug...');
            updateResults('<div class="text-center"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div><p class="mt-2">Running auth debug...</p></div>');
            
            try {
                if (typeof window.debugAuth === 'function') {
                    const result = await window.debugAuth();
                    updateResults(`
                        <div class="space-y-4">
                            <h3 class="font-semibold text-lg">Auth Debug Results</h3>
                            <div class="text-lg ${result ? 'text-green-600' : 'text-red-600'}">
                                ${result ? '‚úÖ Auth system working' : '‚ùå Auth system has issues'}
                            </div>
                            <p class="text-sm text-gray-600">Check console for detailed logs</p>
                        </div>
                    `);
                    
                    updateStatus('auth', result ? 'Good' : 'Error');
                } else {
                    updateResults('<div class="text-red-600">‚ùå Auth debug function not available</div>');
                }
            } catch (error) {
                console.error('Error running auth debug:', error);
                updateResults(`<div class="text-red-600">‚ùå Error: ${error.message}</div>`);
            }
        }

        async function runQuickFix() {
            console.log('üîß Running quick fix...');
            updateResults('<div class="text-center"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto"></div><p class="mt-2">Running quick fix...</p></div>');
            
            try {
                if (typeof window.quickAuthFix === 'function') {
                    const result = await window.quickAuthFix();
                    updateResults(`
                        <div class="space-y-4">
                            <h3 class="font-semibold text-lg">Quick Fix Results</h3>
                            <div class="text-lg ${result ? 'text-green-600' : 'text-red-600'}">
                                ${result ? '‚úÖ Quick fix completed' : '‚ùå Quick fix failed'}
                            </div>
                            <p class="text-sm text-gray-600">Check console for detailed logs</p>
                        </div>
                    `);
                    
                    updateStatus('db', result ? 'Connected' : 'Error');
                } else {
                    updateResults('<div class="text-red-600">‚ùå Quick fix function not available</div>');
                }
            } catch (error) {
                console.error('Error running quick fix:', error);
                updateResults(`<div class="text-red-600">‚ùå Error: ${error.message}</div>`);
            }
        }

        async function createAdmin() {
            console.log('üë§ Creating admin user...');
            updateResults('<div class="text-center"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600 mx-auto"></div><p class="mt-2">Creating admin user...</p></div>');
            
            try {
                if (typeof window.createTestAdmin === 'function') {
                    const result = await window.createTestAdmin();
                    updateResults(`
                        <div class="space-y-4">
                            <h3 class="font-semibold text-lg">Admin Creation Results</h3>
                            <div class="text-lg ${result ? 'text-green-600' : 'text-red-600'}">
                                ${result ? '‚úÖ Admin user created' : '‚ùå Admin creation failed'}
                            </div>
                            ${result ? '<p class="text-sm text-gray-600">Email: admin@test.com<br>Password: admin123456</p>' : ''}
                        </div>
                    `);
                    
                    updateStatus('admin', result ? 'Active' : 'Error', {
                        count: result ? '1+' : '0',
                        access: result ? 'Available' : 'None'
                    });
                } else {
                    updateResults('<div class="text-red-600">‚ùå Create admin function not available</div>');
                }
            } catch (error) {
                console.error('Error creating admin:', error);
                updateResults(`<div class="text-red-600">‚ùå Error: ${error.message}</div>`);
            }
        }

        async function testLoginWithForm() {
            const email = document.getElementById('test-email').value;
            const password = document.getElementById('test-password').value;
            
            console.log('üîê Testing login with form data...');
            updateResults('<div class="text-center"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto"></div><p class="mt-2">Testing login...</p></div>');
            
            try {
                if (typeof window.testLogin === 'function') {
                    const result = await window.testLogin(email, password);
                    updateResults(`
                        <div class="space-y-4">
                            <h3 class="font-semibold text-lg">Login Test Results</h3>
                            <div class="text-lg ${result.success ? 'text-green-600' : 'text-red-600'}">
                                ${result.success ? '‚úÖ Login successful' : '‚ùå Login failed'}
                            </div>
                            ${result.success ? `<p class="text-sm text-gray-600">User ID: ${result.user?.id}</p>` : ''}
                            ${result.error ? `<p class="text-sm text-red-600">Error: ${result.error.message}</p>` : ''}
                        </div>
                    `);
                    
                    updateStatus('auth', result.success ? 'Active' : 'Error', {
                        session: result.success ? 'Active' : 'None',
                        user: result.success ? result.user?.email : 'None'
                    });
                } else {
                    updateResults('<div class="text-red-600">‚ùå Test login function not available</div>');
                }
            } catch (error) {
                console.error('Error testing login:', error);
                updateResults(`<div class="text-red-600">‚ùå Error: ${error.message}</div>`);
            }
        }

        function testLoginForm() {
            window.open('/admin/login', '_blank');
        }

        // Auto-run basic check on page load
        setTimeout(() => {
            console.log('üöÄ Page loaded, running auto-check...');
            runAuthDebug();
        }, 1000);
    </script>
</body>
</html>
