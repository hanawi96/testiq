---
import AdminLayout from '../../layouts/AdminLayout.astro';

// Demo data minh h·ªça
const mockCountries = [
  { name: 'Singapore', code: 'SG', flag: 'üá∏üá¨', scores: [142, 145, 138, 149, 144, 140, 147, 143, 146, 141, 145, 142, 148, 144, 143, 146, 145, 147, 144, 143, 142, 145, 146, 144, 143] },
  { name: 'H√†n Qu·ªëc', code: 'KR', flag: 'üá∞üá∑', scores: [140, 142, 138, 144, 141, 139, 143, 140, 142, 141, 144, 139, 143, 140, 142, 138, 145, 141, 143, 140, 142, 144, 139, 141, 143, 140, 142, 144, 139, 141] },
  { name: 'Monaco', code: 'MC', flag: 'üá≤üá®', scores: [155, 148, 152] }, // Sample qu√° nh·ªè
  { name: 'Vi·ªát Nam', code: 'VN', flag: 'üáªüá≥', scores: [125, 128, 122, 130, 126, 124, 129, 127, 125, 128, 123, 131, 126, 124, 127, 129, 125, 128, 126, 124, 130, 127, 125, 128, 126] },
  { name: 'Test Country', code: 'TC', flag: 'üè≥Ô∏è', scores: [110, 112, 108, 114, 111, 109, 113, 110, 112, 108, 50, 111, 109, 113, 110, 112, 180, 114, 111, 109, 113, 110, 112, 108, 114] }
];

// T√≠nh to√°n demo v·ªõi data m·∫´u
const totalSamples = mockCountries.reduce((sum, c) => sum + c.scores.length, 0);
const minSampleSize = Math.max(25, Math.ceil(totalSamples * 0.001));

function removeOutliers(scores: number[]): { cleaned: number[]; outliers: number[] } {
  if (scores.length < 10) return { cleaned: scores, outliers: [] };
  
  const sorted = [...scores].sort((a, b) => a - b);
  const q1 = sorted[Math.floor(sorted.length * 0.25)];
  const q3 = sorted[Math.floor(sorted.length * 0.75)];
  const iqr = q3 - q1;
  const lowerBound = q1 - 1.5 * iqr;
  const upperBound = q3 + 1.5 * iqr;
  
  const cleaned = scores.filter(s => s >= lowerBound && s <= upperBound);
  const outliers = scores.filter(s => s < lowerBound || s > upperBound);
  
  return { cleaned, outliers };
}

function calculateVariance(scores: number[]): number {
  const mean = scores.reduce((sum, s) => sum + s, 0) / scores.length;
  return scores.reduce((sum, s) => sum + Math.pow(s - mean, 2), 0) / scores.length;
}

const processedCountries = mockCountries.map(country => {
  const originalAvg = Math.round(country.scores.reduce((sum, s) => sum + s, 0) / country.scores.length);
  const { cleaned, outliers } = removeOutliers(country.scores);
  const cleanedAvg = cleaned.length > 0 ? Math.round(cleaned.reduce((sum, s) => sum + s, 0) / cleaned.length) : originalAvg;
  
  // Confidence calculation
  const sampleSizeRatio = Math.min(cleaned.length / (totalSamples * 0.05), 1);
  const variance = calculateVariance(cleaned);
  const normalizedVariance = Math.min(variance / 400, 1);
  const confidence = Math.min((sampleSizeRatio * 0.5) + ((1 - normalizedVariance) * 0.5), 1);
  
  // Population weight
  const populationWeight = Math.min(1.0, country.scores.length / (totalSamples * 0.05));
  const weightedAvg = Math.round(cleanedAvg * (0.7 + 0.3 * populationWeight));
  
  const compositeScore = weightedAvg + (confidence * 3);
  const meetsMinSize = country.scores.length >= minSampleSize;
  const validAfterCleaning = cleaned.length >= minSampleSize * 0.7;
  
  return {
    ...country,
    originalAvg,
    cleaned,
    outliers,
    cleanedAvg,
    confidence,
    populationWeight,
    weightedAvg,
    compositeScore,
    meetsMinSize,
    validAfterCleaning,
    variance
  };
}).sort((a, b) => b.compositeScore - a.compositeScore);

const validCountries = processedCountries.filter(c => c.meetsMinSize && c.validAfterCleaning);
---

<AdminLayout title="Top Countries Algorithm Demo">
  <div class="max-w-7xl mx-auto p-6">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">üßÆ Thu·∫≠t to√°n Top 5 Qu·ªëc gia IQ</h1>
      <p class="text-gray-600">Chi ti·∫øt c√°ch t√≠nh to√°n Top 5 qu·ªëc gia IQ cao nh·∫•t m·ªôt c√°ch h·ª£p l√Ω v√† ch√≠nh x√°c</p>
    </div>

    <!-- Algorithm Overview -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 mb-8">
      <h2 class="text-xl font-semibold text-blue-900 mb-4">üìä 6 B∆∞·ªõc Thu·∫≠t to√°n</h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
        <div class="bg-white p-4 rounded-lg">
          <div class="text-blue-600 font-bold mb-2">1. üìè Sample Size Filter</div>
          <div class="text-sm text-gray-600">Min {minSampleSize} tests cho statistical significance</div>
        </div>
        <div class="bg-white p-4 rounded-lg">
          <div class="text-green-600 font-bold mb-2">2. üéØ Remove Outliers</div>
          <div class="text-sm text-gray-600">IQR method ƒë·ªÉ lo·∫°i b·ªè ƒëi·ªÉm b·∫•t th∆∞·ªùng</div>
        </div>
        <div class="bg-purple-600 text-white p-4 rounded-lg">
          <div class="font-bold mb-2">3. üìà Confidence Score</div>
          <div class="text-xs opacity-90">Sample size + variance analysis</div>
        </div>
        <div class="bg-orange-500 text-white p-4 rounded-lg">
          <div class="font-bold mb-2">4. ‚öñÔ∏è Population Weight</div>
          <div class="text-xs opacity-90">70% pure + 30% population-weighted</div>
        </div>
        <div class="bg-red-500 text-white p-4 rounded-lg">
          <div class="font-bold mb-2">5. üèÜ Composite Score</div>
          <div class="text-xs opacity-90">IQ + confidence bonus</div>
        </div>
        <div class="bg-gray-700 text-white p-4 rounded-lg">
          <div class="font-bold mb-2">6. üî¢ Final Ranking</div>
          <div class="text-xs opacity-90">Sort by composite score</div>
        </div>
      </div>
    </div>

    <!-- Detailed Analysis -->
    <div class="space-y-6">
      {processedCountries.map((country, idx) => (
        <div class={`rounded-xl p-6 border-2 ${
          country.meetsMinSize && country.validAfterCleaning 
            ? 'bg-green-50 border-green-200' 
            : 'bg-red-50 border-red-200'
        }`}>
          <!-- Country Header -->
          <div class="flex items-center justify-between mb-6">
            <div class="flex items-center gap-3">
              <span class="text-3xl">{country.flag}</span>
              <div>
                <h3 class="text-xl font-bold text-gray-900">{country.name}</h3>
                <div class="text-sm text-gray-500">Code: {country.code}</div>
              </div>
            </div>
            <div class="text-right">
              {country.meetsMinSize && country.validAfterCleaning ? (
                <div>
                  <div class="text-green-600 font-bold text-lg">‚úÖ H·ª¢P L·ªÜ</div>
                  <div class="text-sm text-gray-600">Rank: #{validCountries.indexOf(country) + 1}</div>
                </div>
              ) : (
                <div class="text-red-600 font-bold text-lg">‚ùå LO·∫†I B·ªé</div>
              )}
            </div>
          </div>

          <!-- Step by Step Analysis -->
          <div class="grid lg:grid-cols-2 gap-6">
            <!-- Left Column: Raw Data & Processing -->
            <div class="space-y-4">
              <div class="bg-white p-4 rounded-lg">
                <h4 class="font-semibold text-gray-800 mb-2">üìä Raw Data Analysis</h4>
                <div class="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <span class="text-gray-600">Sample Size:</span>
                    <span class="font-bold ml-2">{country.scores.length}</span>
                    <span class="ml-1">{country.scores.length >= minSampleSize ? '‚úÖ' : '‚ùå'}</span>
                  </div>
                  <div>
                    <span class="text-gray-600">Original Avg:</span>
                    <span class="font-bold ml-2">{country.originalAvg}</span>
                  </div>
                </div>
                <div class="mt-2 text-xs text-gray-500">
                  Scores: {country.scores.slice(0, 10).join(', ')}{country.scores.length > 10 ? '...' : ''}
                </div>
              </div>

              <div class="bg-white p-4 rounded-lg">
                <h4 class="font-semibold text-gray-800 mb-2">üéØ Outlier Removal</h4>
                <div class="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <span class="text-gray-600">Cleaned Avg:</span>
                    <span class="font-bold ml-2 text-blue-600">{country.cleanedAvg}</span>
                  </div>
                  <div>
                    <span class="text-gray-600">Valid Samples:</span>
                    <span class="font-bold ml-2">{country.cleaned.length}</span>
                  </div>
                </div>
                {country.outliers.length > 0 && (
                  <div class="mt-2 text-xs text-red-600">
                    Outliers removed: {country.outliers.join(', ')}
                  </div>
                )}
              </div>
            </div>

            <!-- Right Column: Advanced Metrics -->
            <div class="space-y-4">
              <div class="bg-white p-4 rounded-lg">
                <h4 class="font-semibold text-gray-800 mb-2">üìà Statistical Metrics</h4>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-gray-600">Confidence Score:</span>
                    <span class="font-bold text-purple-600">{(country.confidence * 100).toFixed(1)}%</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Population Weight:</span>
                    <span class="font-bold text-orange-600">{(country.populationWeight * 100).toFixed(1)}%</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Variance:</span>
                    <span class="font-bold text-gray-600">{country.variance.toFixed(1)}</span>
                  </div>
                </div>
              </div>

              <div class="bg-white p-4 rounded-lg">
                <h4 class="font-semibold text-gray-800 mb-2">üèÜ Final Results</h4>
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between">
                    <span class="text-gray-600">Weighted IQ:</span>
                    <span class="font-bold text-green-600 text-lg">{country.weightedAvg}</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Composite Score:</span>
                    <span class="font-bold text-blue-600">{country.compositeScore.toFixed(1)}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Failure Reason -->
          {(!country.meetsMinSize || !country.validAfterCleaning) && (
            <div class="mt-4 bg-red-100 border border-red-200 p-3 rounded-lg">
              <div class="text-red-800 text-sm font-semibold">
                ‚ö†Ô∏è L√Ω do lo·∫°i b·ªè:
              </div>
              <ul class="text-red-700 text-sm mt-1 list-disc list-inside">
                {!country.meetsMinSize && (
                  <li>Sample size qu√° nh·ªè ({country.scores.length} < {minSampleSize})</li>
                )}
                {!country.validAfterCleaning && (
                  <li>Sau remove outliers c√≤n qu√° √≠t samples ({country.cleaned.length} < {Math.round(minSampleSize * 0.7)})</li>
                )}
              </ul>
            </div>
          )}
        </div>
      ))}
    </div>

    <!-- Final Top 5 Results -->
    <div class="mt-8 bg-gradient-to-r from-yellow-50 to-orange-50 rounded-xl p-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">üèÜ Top 5 K·∫øt qu·∫£ cu·ªëi c√πng</h2>
      <div class="space-y-3">
        {validCountries.slice(0, 5).map((country, idx) => (
          <div class="bg-white rounded-lg p-4 flex items-center justify-between shadow-sm">
            <div class="flex items-center gap-4">
              <div class="text-2xl font-bold text-gray-400">#{idx + 1}</div>
              <span class="text-3xl">{country.flag}</span>
              <div>
                <div class="font-bold text-gray-900">{country.name}</div>
                <div class="text-sm text-gray-500">
                  {country.cleaned.length} samples | Confidence: {(country.confidence * 100).toFixed(0)}%
                </div>
              </div>
            </div>
            <div class="text-right">
              <div class="text-3xl font-bold text-blue-600">{country.weightedAvg}</div>
              <div class="text-sm text-gray-500">Composite: {country.compositeScore.toFixed(1)}</div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Algorithm Explanation -->
    <div class="mt-8 bg-gray-50 rounded-xl p-6">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">üî¨ Chi ti·∫øt thu·∫≠t to√°n</h2>
      <div class="grid md:grid-cols-2 gap-6 text-sm">
        <div class="space-y-4">
          <div>
            <h3 class="font-semibold text-gray-800 mb-2">1. üìè Minimum Sample Size</h3>
            <p class="text-gray-700">
              C√¥ng th·ª©c: <code class="bg-gray-200 px-1 rounded">max(25, 0.1% t·ªïng samples)</code><br/>
              Trong demo n√†y: {minSampleSize} tests minimum
            </p>
          </div>
          
          <div>
            <h3 class="font-semibold text-gray-800 mb-2">2. üéØ IQR Outlier Removal</h3>
            <p class="text-gray-700">
              Q1 = 25th percentile, Q3 = 75th percentile<br/>
              IQR = Q3 - Q1<br/>
              Outliers: &lt; Q1 - 1.5√óIQR ho·∫∑c &gt; Q3 + 1.5√óIQR
            </p>
          </div>

          <div>
            <h3 class="font-semibold text-gray-800 mb-2">3. üìä Confidence Score</h3>
            <p class="text-gray-700">
              Sample Size Factor (0-0.5) + Low Variance Factor (0-0.5)<br/>
              C√†ng nhi·ªÅu sample v√† variance th·∫•p = confidence cao
            </p>
          </div>
        </div>

        <div class="space-y-4">
          <div>
            <h3 class="font-semibold text-gray-800 mb-2">4. ‚öñÔ∏è Population Weighting</h3>
            <p class="text-gray-700">
              Weighted Avg = CleanedAvg √ó (0.7 + 0.3 √ó PopulationWeight)<br/>
              C√¢n b·∫±ng gi·ªØa ch·∫•t l∆∞·ª£ng v√† ƒë·∫°i di·ªán
            </p>
          </div>

          <div>
            <h3 class="font-semibold text-gray-800 mb-2">5. üèÜ Composite Scoring</h3>
            <p class="text-gray-700">
              Final Score = Weighted IQ + (Confidence √ó 3)<br/>
              ∆Øu ti√™n qu·ªëc gia c√≥ ƒë·ªô tin c·∫≠y cao
            </p>
          </div>

          <div>
            <h3 class="font-semibold text-gray-800 mb-2">6. üìã Why This Approach?</h3>
            <p class="text-gray-700">
              ‚Ä¢ Statistical significance<br/>
              ‚Ä¢ Robust against outliers<br/>
              ‚Ä¢ Confidence-weighted results<br/>
              ‚Ä¢ Balanced representation
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Navigation -->
    <div class="mt-8 flex gap-4">
      <a href="/admin" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors">
        ‚Üê Admin Dashboard
      </a>
      <a href="/admin/dashboard-test" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
        Test v·ªõi d·ªØ li·ªáu th·∫≠t ‚Üí
      </a>
      <a href="/leaderboard" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
        Xem Leaderboard ‚Üí
      </a>
    </div>
  </div>
</AdminLayout> 