---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getLocale } from '../utils/i18n';
import LucideIcon from '../components/LucideIcon.astro';

const locale = getLocale('vi');

// Sample result data - in real app this would come from URL params or API
const resultData = {
  score: 128,
  percentile: 94,
  level: 'Superior',
  accuracy: 85,
  timeSpent: '42:15',
  category: 'Logical Reasoning',
  strengths: ['Pattern Recognition', 'Spatial Intelligence', 'Problem Solving'],
  improvements: ['Processing Speed', 'Working Memory'],
  badge: 'genius'
};

// Calculate badge type based on score
const getBadgeInfo = (score: number) => {
  if (score >= 140) return { type: 'genius', label: 'Thiên tài', color: 'from-purple-500 to-pink-500', icon: 'star' };
  if (score >= 130) return { type: 'superior', label: 'Xuất sắc', color: 'from-blue-500 to-cyan-500', icon: 'award' };
  if (score >= 115) return { type: 'above', label: 'Trên trung bình', color: 'from-green-500 to-emerald-500', icon: 'zap' };
  return { type: 'average', label: 'Trung bình', color: 'from-orange-500 to-red-500', icon: 'check-circle' };
};

const badgeInfo = getBadgeInfo(resultData.score);
---

<BaseLayout
  title={`Kết quả IQ: ${resultData.score} điểm - ${locale.meta.site_name}`}
  description={`Bạn đạt ${resultData.score} điểm IQ, vượt qua ${resultData.percentile}% dân số. Xem phân tích chi tiết.`}
>
  <section class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 py-20">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Confetti Container -->
      <div id="confetti-container" class="fixed inset-0 pointer-events-none z-50"></div>
      
      <!-- Main Result Card -->
      <div class="bg-white rounded-3xl shadow-2xl p-8 mb-8 relative overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
          <div class="absolute inset-0 bg-gradient-to-br from-blue-600 to-purple-600"></div>
        </div>
        
        <div class="relative z-10 text-center">
          <!-- Badge -->
          <div class={`inline-flex items-center justify-center w-24 h-24 rounded-full bg-gradient-to-r ${badgeInfo.color} mb-6 shadow-lg`}>
            <LucideIcon name={badgeInfo.icon} size={40} class="text-white" />
          </div>
          
          <!-- Score -->
          <h1 class="text-6xl md:text-7xl font-bold text-gray-900 mb-2">
            {resultData.score}
          </h1>
          <p class="text-2xl text-gray-600 mb-4">Chỉ số IQ của bạn</p>
          
          <!-- Level Badge -->
          <div class={`inline-flex items-center px-6 py-3 rounded-full bg-gradient-to-r ${badgeInfo.color} text-white font-semibold text-lg shadow-lg mb-6`}>
            <LucideIcon name={badgeInfo.icon} size={20} class="mr-2" />
            {badgeInfo.label}
          </div>
          
          <!-- Percentile -->
          <p class="text-xl text-gray-700 mb-8">
            Bạn thông minh hơn <span class="font-bold text-blue-600">{resultData.percentile}%</span> dân số thế giới
          </p>
        </div>
      </div>

      <!-- Stats Grid -->
      <div class="grid md:grid-cols-3 gap-6 mb-8">
        <div class="bg-white rounded-2xl p-6 text-center shadow-lg">
          <LucideIcon name="check-circle" size={32} class="text-green-500 mx-auto mb-3" />
          <div class="text-3xl font-bold text-gray-900 mb-1">{resultData.accuracy}%</div>
          <div class="text-gray-600">Độ chính xác</div>
        </div>
        
        <div class="bg-white rounded-2xl p-6 text-center shadow-lg">
          <LucideIcon name="clock" size={32} class="text-blue-500 mx-auto mb-3" />
          <div class="text-3xl font-bold text-gray-900 mb-1">{resultData.timeSpent}</div>
          <div class="text-gray-600">Thời gian</div>
        </div>
        
        <div class="bg-white rounded-2xl p-6 text-center shadow-lg">
          <LucideIcon name="brain" size={32} class="text-purple-500 mx-auto mb-3" />
          <div class="text-3xl font-bold text-gray-900 mb-1">{resultData.category}</div>
          <div class="text-gray-600">Điểm mạnh</div>
        </div>
      </div>

      <!-- Analysis Section -->
      <div class="bg-white rounded-2xl shadow-lg p-8 mb-8">
        <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
          <LucideIcon name="bar-chart-3" size={24} class="mr-3 text-blue-600" />
          Phân tích chi tiết
        </h2>
        
        <div class="grid md:grid-cols-2 gap-8">
          <!-- Strengths -->
          <div>
            <h3 class="text-lg font-semibold text-green-600 mb-4 flex items-center">
              <LucideIcon name="zap" size={20} class="mr-2" />
              Điểm mạnh
            </h3>
            <div class="space-y-3">
              {resultData.strengths.map(strength => (
                <div class="flex items-center p-3 bg-green-50 rounded-lg">
                  <LucideIcon name="check-circle" size={16} class="text-green-500 mr-3" />
                  <span class="text-gray-700">{strength}</span>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Improvements -->
          <div>
            <h3 class="text-lg font-semibold text-orange-600 mb-4 flex items-center">
              <LucideIcon name="award" size={20} class="mr-2" />
              Cơ hội phát triển
            </h3>
            <div class="space-y-3">
              {resultData.improvements.map(area => (
                <div class="flex items-center p-3 bg-orange-50 rounded-lg">
                  <LucideIcon name="brain" size={16} class="text-orange-500 mr-3" />
                  <span class="text-gray-700">{area}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      <!-- IQ Scale Visualization -->
      <div class="bg-white rounded-2xl shadow-lg p-8 mb-8">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Thang điểm IQ</h2>
        <div class="relative">
          <!-- Scale -->
          <div class="h-4 bg-gradient-to-r from-red-400 via-yellow-400 via-green-400 via-blue-400 to-purple-400 rounded-full mb-4"></div>
          
          <!-- Markers -->
          <div class="flex justify-between text-sm text-gray-600 mb-2">
            <span>70</span>
            <span>85</span>
            <span>100</span>
            <span>115</span>
            <span>130</span>
            <span>145+</span>
          </div>
          
          <!-- Your Score Indicator -->
          <div class="relative">
            <div 
              class="absolute w-6 h-6 bg-white border-4 border-blue-600 rounded-full shadow-lg transform -translate-x-3"
              style={`left: ${Math.min(((resultData.score - 70) / 75) * 100, 100)}%`}
            ></div>
          </div>
          
          <!-- Labels -->
          <div class="flex justify-between text-xs text-gray-500 mt-4">
            <span>Dưới TB</span>
            <span>Trung bình</span>
            <span>Trên TB</span>
            <span>Xuất sắc</span>
            <span>Thiên tài</span>
          </div>
        </div>
      </div>

      <!-- Social Sharing -->
      <div class="bg-white rounded-2xl shadow-lg p-8 text-center">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Chia sẻ kết quả</h2>
        <p class="text-gray-600 mb-6">Khoe kết quả IQ tuyệt vời của bạn với bạn bè!</p>
        
        <div class="flex flex-wrap justify-center gap-4">
          <!-- Facebook -->
          <button 
            onclick="shareToFacebook()"
            class="flex items-center px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
            Facebook
          </button>
          
          <!-- Twitter -->
          <button 
            onclick="shareToTwitter()"
            class="flex items-center px-6 py-3 bg-black text-white rounded-xl hover:bg-gray-800 transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
            Twitter
          </button>
          
          <!-- Copy Link -->
          <button 
            onclick="copyLink()"
            class="flex items-center px-6 py-3 bg-gray-600 text-white rounded-xl hover:bg-gray-700 transition-colors"
          >
            <LucideIcon name="globe" size={20} class="mr-2" />
            Copy Link
          </button>
        </div>
      </div>

      <!-- Retake Button -->
      <div class="text-center mt-8">
        <a 
          href="/test/iq"
          class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
        >
          <LucideIcon name="brain" size={20} class="mr-2" />
          Làm lại test
        </a>
      </div>
      
    </div>
  </section>
</BaseLayout>

<script>
  // Confetti effect
  function createConfetti() {
    const colors = ['#3B82F6', '#8B5CF6', '#10B981', '#F59E0B', '#EF4444'];
    const container = document.getElementById('confetti-container');
    
    for (let i = 0; i < 100; i++) {
      const confetti = document.createElement('div');
      confetti.style.cssText = `
        position: absolute;
        width: 8px;
        height: 8px;
        background: ${colors[Math.floor(Math.random() * colors.length)]};
        left: ${Math.random() * 100}%;
        top: -10px;
        border-radius: 50%;
        animation: fall ${2 + Math.random() * 3}s linear forwards;
        z-index: 1000;
      `;
      container.appendChild(confetti);
      
      setTimeout(() => confetti.remove(), 5000);
    }
  }
  
  // CSS animation for confetti
  const style = document.createElement('style');
  style.textContent = `
    @keyframes fall {
      0% { transform: translateY(-10px) rotate(0deg); opacity: 1; }
      100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
    }
  `;
  document.head.appendChild(style);
  
  // Trigger confetti on load if score is good
  document.addEventListener('DOMContentLoaded', () => {
    const score = ${resultData.score};
    if (score >= 115) {
      setTimeout(createConfetti, 500);
    }
  });
  
  // Social sharing functions
  function shareToFacebook() {
    const url = encodeURIComponent(window.location.href);
    const text = encodeURIComponent(`Tôi vừa đạt ${resultData.score} điểm IQ! 🧠✨ Thử sức với bài test này nhé!`);
    window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}&quote=${text}`, '_blank', 'width=600,height=400');
  }
  
  function shareToTwitter() {
    const url = encodeURIComponent(window.location.href);
    const text = encodeURIComponent(`Tôi vừa đạt ${resultData.score} điểm IQ! 🧠✨ Thử sức với bài test này nhé! #IQTest #BrainPower`);
    window.open(`https://twitter.com/intent/tweet?text=${text}&url=${url}`, '_blank', 'width=600,height=400');
  }
  
  function copyLink() {
    navigator.clipboard.writeText(window.location.href).then(() => {
      // Show toast notification
      const toast = document.createElement('div');
      toast.textContent = 'Đã copy link!';
      toast.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #10B981;
        color: white;
        padding: 12px 24px;
        border-radius: 8px;
        z-index: 1000;
        animation: slideIn 0.3s ease;
      `;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 2000);
    });
  }
  
  // Toast animation
  const toastStyle = document.createElement('style');
  toastStyle.textContent = `
    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
  `;
  document.head.appendChild(toastStyle);
</script>