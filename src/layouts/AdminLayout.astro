---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Admin Panel - IQ Test System" } = Astro.props;

import SEO from '../components/seo/SEO.astro';
import AdminSidebar from '../components/admin/layout/AdminSidebar.astro';
import AdminHeader from '../components/admin/layout/AdminHeader.astro';
---

<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Dark mode script - th√™m tr∆∞·ªõc khi trang t·∫£i ƒë·ªÉ tr√°nh nh·∫•p nh√°y -->
  <script is:inline>
    // L·∫•y theme t·ª´ localStorage ho·∫∑c preferences
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const isDark = savedTheme === 'dark' || (!savedTheme && prefersDark);

    // √Åp d·ª•ng class dark n·∫øu c·∫ßn
    if (isDark) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  </script>

  <!-- Admin sidebar state pre-loading script - ch·∫°y tr∆∞·ªõc khi DOM render -->
  <script is:inline>
    // üéØ INSTANT FIX: Apply sidebar state ngay l·∫≠p t·ª©c ƒë·ªÉ tr√°nh flash
    try {
      // ƒê·ªçc sidebar state t·ª´ localStorage
      const isCollapsed = localStorage.getItem('admin-sidebar-collapsed') === 'true';

      // ƒê·ªçc dropdown states
      const dropdownStates = {};
      for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);
        if (key && key.startsWith('dropdown-') && key.endsWith('-open')) {
          const dropdownId = key.replace('dropdown-', '').replace('-open', '');
          dropdownStates[dropdownId] = localStorage.getItem(key) === 'true';
        }
      }

      // Store states globally ƒë·ªÉ AdminSidebar component c√≥ th·ªÉ access
      window.__ADMIN_SIDEBAR_STATE__ = {
        isCollapsed,
        dropdownStates,
        preLoaded: true
      };

      // üéØ INSTANT APPLICATION: Apply styles ngay l·∫≠p t·ª©c qua CSS
      let cssRules = [];

      // Sidebar collapsed state
      if (isCollapsed) {
        cssRules.push(`
          #admin-sidebar {
            width: 4rem !important; /* w-16 */
          }
          #admin-sidebar .sidebar-text {
            display: none !important;
          }
          #admin-sidebar #sidebar-brand {
            display: none !important;
          }
          #admin-main-content {
            padding-left: 4rem !important; /* lg:pl-16 */
          }
          @media (max-width: 1023px) {
            #admin-main-content {
              padding-left: 0 !important;
            }
          }
        `);
      }

      // Dropdown states
      Object.keys(dropdownStates).forEach(dropdownId => {
        const isOpen = dropdownStates[dropdownId];
        if (isOpen) {
          cssRules.push(`
            [data-dropdown-content="${dropdownId}"] {
              max-height: 200px !important;
              opacity: 1 !important;
            }
            [data-dropdown-id="${dropdownId}"] .dropdown-arrow {
              transform: rotate(90deg) !important;
            }
          `);
        } else {
          cssRules.push(`
            [data-dropdown-content="${dropdownId}"] {
              max-height: 0 !important;
              opacity: 0 !important;
            }
            [data-dropdown-id="${dropdownId}"] .dropdown-arrow {
              transform: rotate(0deg) !important;
            }
          `);
        }
      });

      // Apply CSS if needed
      if (cssRules.length > 0) {
        const style = document.createElement('style');
        style.setAttribute('data-sidebar-preload', 'true');
        style.textContent = cssRules.join('\n');
        document.head.appendChild(style);

        // Mark style as applied ƒë·ªÉ JavaScript bi·∫øt kh√¥ng c·∫ßn apply l·∫°i
        window.__SIDEBAR_STYLE_APPLIED__ = true;
      }

      console.log('üéØ Pre-loaded admin sidebar state:', window.__ADMIN_SIDEBAR_STATE__);

    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to pre-load sidebar state:', error);
      // Fallback state
      window.__ADMIN_SIDEBAR_STATE__ = {
        isCollapsed: false,
        dropdownStates: {},
        preLoaded: false
      };
    }

    // üéØ PERFORMANCE: Temporarily disable transitions during initial load
    document.documentElement.classList.add('no-transitions');

    // Re-enable transitions after DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => {
        document.documentElement.classList.remove('no-transitions');
        console.log('‚úÖ Transitions re-enabled after initial load');
      }, 100);
    });
  </script>

  <SEO
    title={`${title} - Admin`}
    description={description}
    noindex={true}
  />

  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

  <!-- Admin Layout Styles -->
  <link rel="stylesheet" href="/src/styles/admin-layout.css" />

  <!-- Admin Input Styles -->
  <style>
    /* Admin Modal Input Styles - Clean & Minimalist */

    /* Remove all focus rings globally in admin modals */
    .admin-modal *,
    .admin-modal *:focus,
    .admin-modal input,
    .admin-modal input:focus,
    .admin-modal select,
    .admin-modal select:focus,
    .admin-modal textarea,
    .admin-modal textarea:focus,
    .admin-modal button,
    .admin-modal button:focus {
      outline: none !important;
      box-shadow: none !important;
      border-color: rgb(156 163 175) !important; /* gray-400 */
    }

    /* Dark mode border colors */
    .dark .admin-modal input:focus,
    .dark .admin-modal select:focus,
    .dark .admin-modal textarea:focus {
      border-color: rgb(107 114 128) !important; /* gray-500 */
    }

    /* Override Tailwind focus classes with !important */
    .admin-modal .focus\:ring-2:focus,
    .admin-modal input.focus\:ring-2:focus,
    .admin-modal select.focus\:ring-2:focus {
      box-shadow: none !important;
      outline: none !important;
    }

    .admin-modal .focus\:ring-primary-500:focus,
    .admin-modal input.focus\:ring-primary-500:focus {
      box-shadow: none !important;
      outline: none !important;
    }

    .admin-modal .focus\:border-transparent:focus,
    .admin-modal input.focus\:border-transparent:focus {
      border-color: rgb(156 163 175) !important; /* gray-400 */
    }

    /* CountrySelector specific overrides */
    .admin-modal .country-selector input:focus,
    .admin-modal .country-selector select:focus {
      outline: none !important;
      box-shadow: none !important;
      border-color: rgb(156 163 175) !important;
    }

    /* Hover states for accessibility */
    .admin-modal input:hover:not(:disabled),
    .admin-modal select:hover:not(:disabled),
    .admin-modal textarea:hover:not(:disabled) {
      background-color: rgb(249 250 251); /* gray-50 */
    }

    .dark .admin-modal input:hover:not(:disabled),
    .dark .admin-modal select:hover:not(:disabled),
    .dark .admin-modal textarea:hover:not(:disabled) {
      background-color: rgb(75 85 99); /* gray-600 */
    }

    /* Focus states with subtle background change */
    .admin-modal input:focus,
    .admin-modal select:focus,
    .admin-modal textarea:focus {
      background-color: rgb(249 250 251) !important; /* gray-50 */
    }

    .dark .admin-modal input:focus,
    .dark .admin-modal select:focus,
    .dark .admin-modal textarea:focus {
      background-color: rgb(75 85 99) !important; /* gray-600 */
    }
  </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900 min-h-screen font-[Inter] overflow-hidden">

  <!-- Admin Layout Container -->
  <div id="admin-layout" class="flex h-screen">

    <!-- Sidebar -->
    <AdminSidebar currentPath={Astro.url.pathname} />

    <!-- Main Content Area -->
    <div id="admin-main-content" class="flex-1 flex flex-col min-w-0 lg:pl-64 w-full">

      <!-- Header -->
      <AdminHeader title={title} />

      <!-- Main Content -->
      <main class="flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 p-4 sm:p-6">
        <div class="w-full">
          <slot />
        </div>
      </main>

    </div>
  </div>


  <!-- Admin Layout Scripts -->
  <script>
    // Admin layout is now handled by Astro components
    console.log('Admin layout initialized');

    // INTELLIGENT PRELOADING: Start preloading critical data on app init
    try {
      // Use dynamic import without .js extension for Astro compatibility
      import('../utils/admin/preloaders/preload-manager').then(({ SmartPreloader }) => {
        SmartPreloader.triggerSmartPreload('init');
        console.log('‚úÖ Smart preloader initialized');
      }).catch(error => {
        console.warn('‚ö†Ô∏è Failed to load preload manager:', error);
      });
    } catch (error) {
      console.warn('‚ö†Ô∏è Preload manager not available:', error);
    }
  </script>
</body>
</html> 